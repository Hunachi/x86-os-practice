     1                                  ; Reference: 作って理解するOS x86系コンピュータを動かす理論と実装 (https://gihyo.jp/book/2019/978-4-297-10847-2)
     2                                  %include    "../include/macro.s"
     3                              <1> %macro  cdecl 1-*.nolist
     4                              <1> 
     5                              <1>     %rep    %0 - 1
     6                              <1>         push    %{-1:-1}
     7                              <1>         %rotate -1
     8                              <1>     %endrep
     9                              <1>     %rotate -1
    10                              <1> 
    11                              <1>         call    %1
    12                              <1>     
    13                              <1>     %if 1 < %0
    14                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    15                              <1>     %endif
    16                              <1> 
    17                              <1> %endmacro
    18                              <1> 
    19                              <1> struc drive
    20 00000000 ????                <1>         .no         resw    1       ; Drive Number
    21 00000002 ????                <1>         .cyln       resw    1       ; Cylinder
    22 00000004 ????                <1>         .head       resw    1       ; HEAD
    23 00000006 ????                <1>         .sect       resw    1       ; Sector
    24                              <1> endstruc
     3                                  %include    "../include/define.s"
     4                              <1> BOOT_LOAD   equ     0x7c00
     5                              <1> 
     6                              <1> BOOT_SIZE   equ     (1024 * 8)
     7                              <1> SECT_SIZE   equ     (512)
     8                              <1> BOOT_SECT   equ     (BOOT_SIZE / SECT_SIZE) ; Sector count of Boot program. 
     4                                  
     5                                      ORG     BOOT_LOAD           ; Instruct load address to assembler.
     6                                  ; *****************
     7                                  ;    Entory Point 
     8                                  ; *****************
     9                                  entry:
    10 00000000 EB58                        jmp     ipl
    11 00000002 90<rep 58h>                 times    90-($-$$) db 0x90 ; BPB(BOPS Parameter Block)
    12                                  
    13                                  ipl:
    14 0000005A FA                          cli     ; Disabling Inerrupt
    15                                  
    16 0000005B B80000                      mov     ax, 0x0000
    17 0000005E 8ED8                        mov     ds, ax
    18 00000060 8EC0                        mov     es, ax
    19 00000062 8ED0                        mov     ss, ax
    20 00000064 BC007C                      mov     sp, BOOT_LOAD
    21                                  
    22 00000067 FB                          sti
    23                                  
    24 00000068 8816[C400]                  mov     [BOOT + drive.no], dl
    25                                  
    26 0000006C 68[9900]E85A0083C4-         cdecl   puts, .s0
    26 00000074 02                 
    27                                  
    28                                      ; Read all rest sector
    29 00000075 BB0F00                      mov     bx, BOOT_SECT - 1
    30 00000078 B9007E                      mov     cx, BOOT_LOAD + SECT_SIZE
    31                                  
    32 0000007B 515368[C400]E8A700-         cdecl   read_chs, BOOT, bx, cx
    32 00000083 83C406             
    33                                  
    34 00000086 39D8                        cmp     ax, bx
    35                                  .10Q:
    36 00000088 740C                        jz      .10E
    37                                  .10T:
    38 0000008A 68[B100]E83C0083C4-         cdecl   puts, .e0
    38 00000092 02                 
    39 00000093 E85500                      call    reboot
    40                                  .10E:
    41                                  
    42                                      ; Jamp nest stage
    43 00000096 E96701                      jmp     stage_2
    44                                  
    45 00000099 426F6F74696E672048-     .s0     db  "Booting HunachiOS....", 0x0A, 0x0D, 0
    45 000000A2 756E616368694F532E-
    45 000000AB 2E2E2E0A0D00       
    46 000000B1 4572726F723A736563-     .e0     db  "Error:sector read", 0
    46 000000BA 746F72207265616400 
    47                                  
    48 000000C3 00                      ALIGN 2, db 0
    49                                  BOOT:
    50                                      istruc  drive
    51 000000C4 0000                            at  drive.no,   dw 0 ; Drive number
    52 000000C6 0000                            at  drive.cyln, dw 0 ; C: Cylinder
    53 000000C8 0000                            at  drive.head, dw 0 ; H: Head
    54 000000CA 0200                            at  drive.sect, dw 2 ; S: Sector
    55                                      iend
    56                                  
    57                                  ; Module
    58                                  %include    "../modules/real/puts.s"
    59                              <1> puts:
    60 000000CC 55                  <1>     push    bp
    61 000000CD 89E5                <1>     mov     bp, sp
    62                              <1> 
    63 000000CF 50                  <1>     push    ax
    64 000000D0 53                  <1>     push    bx
    65 000000D1 56                  <1>     push    si
    66                              <1> 
    67 000000D2 8B7604              <1>     mov     si, [bp + 4]    ; Address of string.
    68                              <1> 
    69                              <1>     ; Start program
    70 000000D5 B40E                <1>     mov     ah, 0x0E        ; teletype's single word output
    71 000000D7 BB0000              <1>     mov     bx, 0x0000      ; setting page number and word's color 0
    72 000000DA FC                  <1>     cld                     ; DF = 0 ; Add Address.
    73                              <1> .10L:
    74 000000DB AC                  <1>     lodsb                   ; al = *si++;
    75                              <1> 
    76 000000DC 3C00                <1>     cmp     al, 0
    77 000000DE 7404                <1>     je      .10E
    78                              <1> 
    79 000000E0 CD10                <1>     int     0x10            ; call video BIOS.
    80 000000E2 EBF7                <1>     jmp     .10L
    81                              <1> 
    82                              <1> .10E:
    83 000000E4 5E                  <1>     pop     si
    84 000000E5 5B                  <1>     pop     bx
    85 000000E6 58                  <1>     pop     ax
    86                              <1> 
    87 000000E7 89EC                <1>     mov     sp, bp
    88 000000E9 5D                  <1>     pop     bp
    89                              <1> 
    90 000000EA C3                  <1>     ret
    59                                  %include    "../modules/real/reboot.s"
    60                              <1> reboot:
    61                              <1>         ; Display message
    62 000000EB 68[0701]E8DBFF83C4- <1>         cdecl   puts, .s0
    62 000000F3 02                  <1>
    63                              <1> 
    64                              <1>         ; Wait input from keyboard
    65                              <1> .10L:   
    66 000000F4 B410                <1>         mov     ah, 0x10
    67 000000F6 CD16                <1>         int     0x16
    68                              <1> 
    69 000000F8 3C20                <1>         cmp     al, ' '
    70 000000FA 75F8                <1>         jne     .10L
    71                              <1> 
    72                              <1>         ; Display retuen
    73 000000FC 68[2501]E8CAFF83C4- <1>         cdecl    puts, .s1
    73 00000104 02                  <1>
    74                              <1> 
    75                              <1>         ; Reboot
    76 00000105 CD19                <1>         int     0x19        ; BIOS(0x19)
    77                              <1> 
    78 00000107 0A0D50757368205350- <1> .s0     db  0x0A, 0x0D, "Push SPACE key to reboot...", 0
    78 00000110 414345206B65792074- <1>
    78 00000119 6F207265626F6F742E- <1>
    78 00000122 2E2E00              <1>
    79 00000125 0A0D0A0D00          <1> .s1     db  0x0A, 0x0D, 0x0A, 0x0D, 0
    80                              <1> 
    60                                  %include    "../modules/real/read_chs.s"
    61                              <1> read_chs:
    62                              <1>     ; +8 copy dist | +6 sector size | +4 parameter buffer
    63 0000012A 55                  <1>     push    bp
    64 0000012B 89E5                <1>     mov     bp, sp 
    65 0000012D 6A03                <1>     push    3           ; retry = 3 ; Retry Number
    66 0000012F 6A00                <1>     push    0           ; sect = 0 ; Reading Sector Number
    67                              <1> 
    68 00000131 53                  <1>     push    bx          
    69 00000132 51                  <1>     push    cx          
    70 00000133 52                  <1>     push    dx          
    71 00000134 06                  <1>     push    es
    72 00000135 56                  <1>     push    si
    73                              <1> 
    74                              <1>     ; start program
    75 00000136 8B7604              <1>     mov     si, [bp + 4]    ; SI = SRC buffer
    76                              <1> 
    77                              <1>     ; Setting Cylinder
    78 00000139 8A6C02              <1>     mov     ch, [si + drive.cyln + 0]
    79 0000013C 8A4C03              <1>     mov     cl, [si + drive.cyln + 1]
    80 0000013F C0E106              <1>     shl     cl, 6
    81 00000142 0A4C06              <1>     or      cl, [si + drive.sect]
    82                              <1> 
    83                              <1>     ; Read Sector
    84 00000145 8A7404              <1>     mov     dh, [si + drive.head]   ; dh = head number
    85 00000148 8A14                <1>     mov     dl, [si + 0]            ; dl = Drive number
    86 0000014A B80000              <1>     mov     ax, 0x0000              
    87 0000014D 8EC0                <1>     mov     es, ax                  ; es = segment
    88 0000014F 8B5E08              <1>     mov     bx, [bp + 8]            ; bx = copy dst
    89                              <1> .10L:
    90 00000152 B402                <1>     mov     ah, 0x02
    91 00000154 8A4606              <1>     mov     al, [bp + 6]
    92                              <1> 
    93 00000157 CD13                <1>     int     0x13
    94 00000159 7304                <1>     jnc     .11E
    95                              <1> 
    96 0000015B B000                <1>     mov     al, 0
    97 0000015D EB0C                <1>     jmp     .10E
    98                              <1> .11E:
    99 0000015F 3C00                <1>     cmp     al, 0
   100 00000161 7508                <1>     jne     .10E
   101                              <1> 
   102 00000163 B80000              <1>     mov     ax, 0
   103 00000166 FF4EFE              <1>     dec     word [bp - 2]
   104 00000169 75E7                <1>     jnz     .10L
   105                              <1> .10E:
   106 0000016B B400                <1>     mov     ah, 0
   107                              <1> 
   108 0000016D 5E                  <1>     pop     si
   109 0000016E 07                  <1>     pop     es
   110 0000016F 5A                  <1>     pop     dx
   111 00000170 59                  <1>     pop     cx
   112 00000171 5B                  <1>     pop     bx
   113                              <1> 
   114 00000172 89EC                <1>     mov     sp, bp
   115 00000174 5D                  <1>     pop     bp
   116                              <1> 
   117 00000175 C3                  <1>     ret
   118                              <1>     
   119                              <1> 
   120                              <1> 
   121                              <1> 
    61                                  
    62 00000176 00<rep 88h>                 times    510-($-$$) db 0x00
    63 000001FE 55AA                        db      0x55, 0xAA
    64                                  
    65                                  stage_2:
    66 00000200 68[0B02]E8C6FE83C4-         cdecl   puts, .s0
    66 00000208 02                 
    67                                  
    68                                      ; Finish program
    69 00000209 EBFE                        jmp     $
    70                                  
    71 0000020B 326564207374616765-     .s0     db "2ed stage...", 0x0A, 0x0D, 0
    71 00000214 2E2E2E0A0D00       
    72                                  
    73                                  ; Padding (This file size should be 8K.)
    74 0000021A 00<rep 1DE6h>               times   BOOT_SIZE - ($ - $$)     db 0
    75                                      
